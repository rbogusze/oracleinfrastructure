#!/bin/bash
# $Header: /home/remik/osobiste/cvs_repo/scripto/oracle/replay/replay.wrap,v 1.1 2012-05-07 13:49:15 remik Exp $
#
# !!!! D A N G E R !!!
#
# This script is very powerfull and as such very dangerous. 
# Use with utmost caution.
#
# Used to issue the same SQL statement on multiple databases simultaniusly
# Assumes, that after the login the environment is properly set and that
# I am able to connect using sqlplus "/ as sysdba" which gives me total power.
# It is also assumed that I am able to connect to those hosts using priv-key
#
# The list of username#hostname pairs is stored in $DB_LIST
# The commands to be executed are stored in $SQL_FILE
#

LOCKFILE=/tmp/replay_sql.lock
TMP_FILE=/tmp/replay_sql.tmp

SQL_FILE=${HOME}/scripto/oracle/replay/replay.sql

DB_LIST=${HOME}/scripto/oracle/replay/replay.dblist


# Load usefull functions
if [ ! -f $HOME/scripto/bash/bash_library.sh ]; then
  echo "[error] $HOME/scripto/bash/bash_library.sh not found. Exiting. "
  exit 1
else
  . $HOME/scripto/bash/bash_library.sh
fi
RECIPIENTS='remigiusz_boguszewicz'
check_lock $LOCKFILE
check_file $SQL_FILE
check_file $DB_LIST

# Set lock file
touch $LOCKFILE

date
echo -n -e '\E[35m'
echo "The following command:"
echo -n -e '\E[30m'

SQL_FILE_CONTENT=`cat ${SQL_FILE}`
echo $SQL_FILE_CONTENT

echo -n -e '\E[35m'
echo "Is going to be SQL executed on the following hosts:"
echo -n -e '\E[30m'
cat $DB_LIST

echo -n -e '\E[35m'
read -p "Do you REALLY want to execute the above SQL command on databases in selected hosts (yes/no)? " REPLY
echo -n -e '\E[30m'
if [ ! "$REPLY" = "yes" ]; then 
  echo "User aborded mission." 
  exit 1
fi



# Loop through DB_LIST try to PING all entries
exec 3<> $DB_LIST
while read line <&3
do {
  # filter out lines that are comments
  line=`echo $line | grep -v "^#" | grep -v "^--"`
  if [ -z "$line" ]; then
    continue
  fi
  
  OS_USER_NAME=`echo $line | awk -F"#" '{ print $1 }'`
  HOST_NAME=`echo $line | awk -F"#" '{ print $2 }'`
  LDAP_CN=`echo $line | awk -F"#" '{ print $3 }'`
  ORC_ORACLE_HOME=`echo $line | awk -F"#" '{ print $4 }'`
  ORC_SID=`echo $line | awk -F"#" '{ print $5 }'`

  check_variable $OS_USER_NAME
  check_variable $HOST_NAME
  check_variable $LDAP_CN
  check_variable $ORC_ORACLE_HOME
  check_variable $ORC_SID
  
  #echo $OS_USER_NAME $HOST_NAME
  #echo -e '\E[30m black \E[31mred \E[32mgreen \E[33myellow \E[34mblue \E[35mmagenta \E[36mcyan \E[37mwhite'
  #echo -e '\E[30m black'
  
  # Sanity check: for ping reachability of star server
  ping -c 1 $HOST_NAME >/dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo -e -n '\E[32m'
    echo "[info] `date '+%H:%M:%S'` Connection $OS_USER_NAME @ $HOST_NAME found (ping). Continuing $LDAP_CN."
    echo -e -n '\E[30m'
  else
    echo -e -n '\E[31m'
    echo "[warning] `date '+%H:%M:%S'` Host $HOST_NAME not found (ping). Skipping $LDAP_CN."
    echo -e -n '\E[30m'
    continue
  fi

  echo ". $ORC_ORACLE_HOME/.profile; ORACLE_SID=$ORC_SID; export ORACLE_SID; echo \"${SQL_FILE_CONTENT}\" | sqlplus -s '/ as sysdba'" | ssh -T -o BatchMode=yes -o ChallengeResponseAuthentication=no -o PasswordAuthentication=no -o PubkeyAuthentication=yes -o RSAAuthentication=no -2 -l $OS_USER_NAME $HOST_NAME > ${TMP_FILE} 2>&1
  
  cat ${TMP_FILE} | grep -v "SQL>" | grep -v "Connected to" | grep -v "Enterprise Edition Release" | grep -v "With the Partitioning" | grep -v "JServer Release" | grep -v "Copyright (c)" | grep -v "SQL.Plus. Release" | grep -v "Sun Microsystems Inc" | grep -v "You have new mail" | grep -v "^$" | grep -v "You are now on" | grep -v "Setting up the" | grep -v "stty. . Invalid argument" | grep -v "Po³±czenie z" | grep -v "With the OLAP option" | grep -v "You have mail"


}  
done
exec 3>&-

# Upon exit, remove lockfile.
rm -f $LOCKFILE
