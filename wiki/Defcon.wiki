#summary Visualising the AWR / Statspack report

<img src="http://oracleinfrastructure.googlecode.com/files/defcon.png" height='506' />

This project as a prerequisite needs the [Musas] project running - to provide the raw AWR / Statspack reports. As we have those reports it is relatively easy to do some draws.

This project was born from the need to somehow show developers a nice picture that will tell them more than the raw numbers.

==Installation==
{{{
# mkdir /var/www/html/oi_defcon
# chown orainf:orainf /var/www/html/oi_defcon

$ cd /var/www/html/
$ svn checkout https://oracleinfrastructure.googlecode.com/svn/trunk/oi_defcon oi_defcon
$ cd oi_defcon
$ tar xvzf jpgraph-1.20.5.tar.gz

Enable apache user to access the /home/orainf/scripto/php/my_library.php
# chmod g+rx /home/orainf/
# chmod o+rx /home/orainf/

# mkdir -p /usr/X11R6/lib/X11/fonts/truetype
$ scp arial.ttf root@logwatch:/usr/X11R6/lib/X11/fonts/truetype/
}}}

==Usage==

===Selecting Database===

Open the browser and direct it to defcon main directory.

http://logwatch/oi_defcon/

You will be presented with a page allowing to chose a database. There is no LDAP parameter that controls which DB will be available here :). It is just the directories under /var/www/html/awr_reports/ that contain the awr/statspack reports.

<img src="http://oracleinfrastructure.googlecode.com/files/defcon_01.png" />

===Main Statistics===

After selecting the database we are at the main defcon page. Basically some sections from the Statspack report are visualised witch helps to "feel" waht is going on in the database.

The main sections are "CPU Usage", "Buffer Gets", "Physical Reads" and "Elapsed Time". What I find to be the biggest advantage here is that it becomes very easy to see performance problems caused by few very bad performing SQLs that overwhelm the whole database.

If you see something like:

<img src="http://oracleinfrastructure.googlecode.com/files/defcon_02.png" />

It becomes very obvious the the performance effords should focus on first three SQL, as they are the main contributors. 

This approach helped me a lot of times when dealing with developers to convince them to focus their attention on selected SQLs in cases where overall system performance was bad and we had to select some areas that will be redesigned / tuned.

Each section has the corresponding SQL links:

<img src="http://oracleinfrastructure.googlecode.com/files/defcon_03.png" />

The column "Module-exp" should contain the module name to easily identify from where the SQL is comming from (this has to be configured by the developer). As shown on this image often no such information is presented. Selecting that name redirects us to AWR/Statspack SQL report.

More interesting part is the second column named "FullHistor" which on the main page is an SQL ID but selecting this link directs us to the SQL history report.

<img src="http://oracleinfrastructure.googlecode.com/files/defcon_04.png" />

Those drawings are made based on SQL reports, which are created like:
{{{
On AWR:
> @?/rdbms/admin/awrsqrpt.sql

On Statspack (level 6 or greater)
> @?/rdbms/admin/sprepsql
}}}

And I like the a lot. They tell us how selected SQLs are performing during the life of the database. Whether they take more or less time / resources, whether they are executed more or less often, etc. The statistics are divided into sections per instance and per execution. On the bottom of each section we have links that direct us to specific SQL ID report on which the are based.

Here one can easily spot some important trends. The one that is dangerous is where on every next day the SQL is taking more and more time / resources to complete. 



